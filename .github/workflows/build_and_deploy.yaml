name: Docker CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  KUBECONFIG: ./k3s.yaml
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
        id: install

      - name: Get next version
        uses: reecetech/version-increment@2023.4.1
        id: version
        with:
          scheme: semver
          increment: patch
          
      - name: Download k3s config via SCP
        uses: nicklasfrahm/scp-action@main
        with:
          direction: download
          host: ${{ vars.HOST_ADDR }}
          fingerprint: ${{ secrets.SSH_TARGET_FINGERPRINT }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: /etc/rancher/k3s/k3s.yaml
          target: ./k3s.yaml

      - name: Build and Deploy
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.0/cert-manager.yaml
      
      - uses: danielr1996/envsubst-action@1.0.0
        env:
          DJANGO_DEBUG: ${{ env.DJANGO_DEBUG }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_POSTGRES_HOST: ${{ secrets.DJANGO_POSTGRES_HOST }}
          DJANGO_POSTGRES_PORT: ${{ secrets.DJANGO_POSTGRES_PORT }}
          DJANGO_POSTGRES_USER: ${{ secrets.DJANGO_POSTGRES_USER }}
          DJANGO_POSTGRES_PASSWORD: ${{ secrets.DJANGO_POSTGRES_PASSWORD }}
          DJANGO_POSTGRES_DATABASE: ${{ secrets.DJANGO_POSTGRES_DATABASE }}
          DJANGO_ALLOWED_HOSTS: ${{ env.DJANGO_ALLOWED_HOSTS }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        with:
          input: ./k8s/secrets.yaml
          output: ./temp_secrets.json

      - name: Apply secrets
        run:  kubectl apply -f ./temp_secrets.json

      - name: Apply all files
        run: |
          # Apply all files
          kubectl apply -f ./k8s/

          sleep(10)

          docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} https://registry.skyeng-test-task.xyz

          docker build --platform=linux/amd64 -t registry.skyeng-test-task.xyz/checker_app:${{ steps.version.outputs.version }} .

          docker push registry.skyeng-test-task.xyz/checker_app:${{ steps.version.outputs.version }}

          kubectl create secret docker-registry regcred --docker-server=https://registry.skyeng-test-task.xyz --docker-username=${{ secrets.DOCKER_LOGIN }} --docker-password=${{ secrets.DOCKER_PASSWORD }}
