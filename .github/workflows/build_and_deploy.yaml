name: K8s Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  KUBECONFIG: ./k3s.yaml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
        id: install

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        id: version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false

      - name: Copy and prepare k3s config
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.HOST_ADDR }} >> ~/.ssh/known_hosts
          scp -o StrictHostKeyChecking=no -r root@${{ vars.HOST_ADDR }}:/etc/rancher/k3s/k3s.yaml ./k3s.yaml
          sed -i 's/127.0.0.1/${{ vars.HOST_ADDR }}/' ./k3s.yaml

      - name: Substitute env variables into secrets
        uses: danielr1996/envsubst-action@1.0.0
        env:
          DJANGO_DEBUG: ${{ vars.DJANGO_DEBUG }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_POSTGRES_HOST: ${{ secrets.DJANGO_POSTGRES_HOST }}
          DJANGO_POSTGRES_PORT: ${{ secrets.DJANGO_POSTGRES_PORT }}
          DJANGO_POSTGRES_USER: ${{ secrets.DJANGO_POSTGRES_USER }}
          DJANGO_POSTGRES_PASSWORD: ${{ secrets.DJANGO_POSTGRES_PASSWORD }}
          DJANGO_POSTGRES_DATABASE: ${{ secrets.DJANGO_POSTGRES_DATABASE }}
          DJANGO_ALLOWED_HOSTS: ${{ vars.DJANGO_ALLOWED_HOSTS }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          MINIO_STORAGE_ACCESS_KEY: ${{ secrets.MINIO_STORAGE_ACCESS_KEY }}
          MINIO_STORAGE_SECRET_KEY: ${{ secrets.MINIO_STORAGE_SECRET_KEY }}
        with:
          input: ./k8s/secrets.yaml
          output: ./k8s/output_secrets.yaml

      - name: Substitute checker_app.yaml
        uses: danielr1996/envsubst-action@1.0.0
        env:
          IMAGE_TAG: ${{ steps.version.outputs.tag }}
        with:
          input: ./k8s/checker_app.yaml
          output: ./k8s/output_checker_app.yaml

      - name: Substitute celery.yaml
        uses: danielr1996/envsubst-action@1.0.0
        env:
          IMAGE_TAG: ${{ steps.version.outputs.tag }}
        with:
          input: ./k8s/celery.yaml
          output: ./k8s/output_celery.yaml

      - name: Apply all files
        run: |
          rm ./k8s/secrets.yaml
          rm ./k8s/checker_app.yaml
          rm ./k8s/celery.yaml
          kubectl delete job migrate
          kubectl apply --recursive -f ./k8s/

      - name: Build and push app image
        run: |
          docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }} https://registry.skyeng-test-task.xyz
          docker build --platform=linux/amd64 -t registry.skyeng-test-task.xyz/checker_app:${{ steps.version.outputs.new_tag }} ./app
          docker push registry.skyeng-test-task.xyz/checker_app:${{ steps.version.outputs.new_tag }}

      - name: Create regcred secret
        run: |
          kubectl delete secret regcred --ignore-not-found
          kubectl create secret docker-registry regcred --docker-server=https://registry.skyeng-test-task.xyz --docker-username=${{ secrets.DOCKER_LOGIN }} --docker-password=${{ secrets.DOCKER_PASSWORD }}
