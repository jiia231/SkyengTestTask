apiVersion: apps/v1
kind: Deployment
metadata:
  name: checker-app
  labels:
    app: django
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  template:
    metadata:
      labels:
        app: django
    spec:
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
      initContainers:
        - name: move-static
          image: registry.skyeng-test-task.xyz/checker_app:${IMAGE_TAG}
          command: [ "python", "./src/manage.py", "collectstatic", "--noinput" ]
      containers:
        - name: checker-app
          image: registry.skyeng-test-task.xyz/checker_app:${IMAGE_TAG}
          command: [ "gunicorn", "--chdir", "./src", "config.wsgi:application", "--bind", "0.0.0.0:8000" ]
          ports:
            - containerPort: 8000
          resources: { }
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          envFrom:
            - secretRef:
                name: django-app-env

---

apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  type: LoadBalancer
  selector:
    app: django
  ports:
    - port: 8000
      targetPort: 8000

---

kind: Job
apiVersion: batch/v1
metadata:
  name: migrate
spec:
  backoffLimit: 10
  template:
    spec:
      volumes:
        - name: service-config
          secret:
            secretName:  django-app-env
      containers:
        - name: migrate-app-db
          image: registry.skyeng-test-task.xyz/checker_app:${IMAGE_TAG}
          command: ["python", "./src/manage.py", "migrate", "--database", "default"]
          envFrom:
            - secretRef:
                name: django-app-env
      restartPolicy: OnFailure
